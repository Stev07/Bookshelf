{"version":3,"sources":["../../../src/server/routes/Reviews.routes.js"],"names":["express","require","jwt","router","Router","get","isLogged","req","res","Review","find","then","reviews","status","json","catch","err","errors","message","post","user_id","verify","body","token","SECRET","book_id","create","rating","date","Date","now","comment","review","User","findOne","_id","user","push","save","Book","book","patch","findById","params","id","property","delete","isCoach","remove","succed","module","exports"],"mappings":"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","sourcesContent":["import User from \"../models/User\";\nimport Review from \"../models/Review\";\nimport Book from \"../models/Book\";\nimport {SECRET, isLogged, isCoach} from \"./Middleware.routes\";\n\nconst express = require(\"express\");\nconst jwt = require(\"jsonwebtoken\");\n\nlet router = new express.Router();\n\nrouter.get(\"/\", [isLogged], (req, res) => {\n    Review.find()\n        .then(reviews => {\n            res.status(200).json({reviews});\n        })\n        .catch(err => {\n            res.status(500).json({errors: [err.message]});\n        });\n});\n\nrouter.post(\"/\", [isLogged], (req, res) => {\n    const user_id = jwt.verify(req.body.token, SECRET);\n    const book_id = req.body.book_id;\n\n    Review.create({\n        rating: req.body.rating,\n        date: Date.now(),\n        comment: req.body.comment,\n    })\n        .then(review => {\n            User.findOne({_id: user_id.user}).then(user => {\n                user.reviews.push(review._id);\n                user.save();\n            });\n\n            Book.findOne({_id: book_id}).then(book => {\n                book.reviews.push(review._id);\n                book.save();\n            });\n\n            res.status(200).json({review});\n            return;\n        })\n        .catch(err => {\n            res.status(403).json({\n                errors: [\"Failed to add the reviews\", err.message],\n            });\n            return;\n        });\n});\n\nrouter.patch(\"/:id\", [isLogged], (req, res) => {\n    Review.findById(req.params.id)\n        .then(review => {\n            for (let property in req.body) {\n                review[property] = req.body[property];\n            }\n            review.save();\n\n            res.status(200).json({review});\n        })\n        .catch(err => {\n            res.status(404).json({errors: [err.message]});\n        });\n});\n\nrouter.delete(\"/:id\", [isLogged, isCoach], (req, res) => {\n    Review.find({_id: req.params.id})\n        .remove(() => {\n            res.status(200).json({\n                succed: [\"Review successfuly removed from DB\"],\n            });\n        })\n        .catch(err => {\n            res.status(404).json({errors: [err.message]});\n        });\n});\n\nmodule.exports = router;\n"],"file":"Reviews.routes.js"}