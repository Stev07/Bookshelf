{"version":3,"sources":["../../../src/server/routes/Users.routes.js"],"names":["express","require","validator","bcrypt","jwt","router","Router","get","isLogged","isCoach","req","res","User","find","then","users","status","json","catch","err","errors","message","post","findOne","email","body","user","compareSync","password","token","sign","_id","SECRET","send","error","console","log","isEmail","hashSync","newUser","name","firstName","lastName","class","save","patch","user_id","verify","findByIdAndUpdate","oldPassword","passwordConfirm","success","Review","$in","reviews","params","id","module","exports"],"mappings":"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","sourcesContent":["import User from \"../models/User\";\nimport Review from \"../models/Review\";\nimport {SECRET, isCoach, isLogged} from \"./Middleware.routes\";\n\nconst express = require(\"express\");\nconst validator = require(\"validator\");\nconst bcrypt = require(\"bcryptjs\");\nconst jwt = require(\"jsonwebtoken\");\n\nlet router = new express.Router();\n\nrouter.get(\"/\", [isLogged, isCoach], (req, res) => {\n    User.find()\n        .then(users => {\n            res.status(200).json(users);\n        })\n        .catch(err => {\n            res.status(404).json({\n                errors: [err.message],\n            });\n        });\n});\n\nrouter.post(\"/login\", (req, res) => {   \n    User.findOne({email: req.body.email})\n        .then(user => {\n            if (bcrypt.compareSync(req.body.password, user.password)) {\n                const token = jwt.sign({user: user._id}, SECRET);\n\n                res.status(200).json({\n                    token,\n                    user,\n                });\n            } else {\n                res.status(404).send({\n                    error: [\n                        \"Erreur de login: email ou mot de passe incorrecte\",\n                    ],\n                });\n            }\n        })\n        .catch(err => {\n            res.status(404).send({errors: [err.message]});\n        });\n});\n\nrouter.post(\"/\", [isLogged, isCoach], (req, res) => {\n    const user = req.body;\n\n    let password = null;\n\n    console.log(user);\n\n    if (!validator.isEmail(user.email)) {\n        res.status(403).json({errors: [\"Email non valide\"]});\n    }\n\n    password = bcrypt.hashSync(user.password, 10);\n\n    const newUser = new User();\n\n    newUser.name.firstName = user.firstName;\n    newUser.name.lastName = user.lastName;\n    newUser.email = user.email;\n    newUser.password = password;\n    newUser.class = user.class;\n    newUser.save();\n\n    res.status(200).json({newUser});\n});\n\nrouter.patch(\"/password\", [isLogged], (req, res) => {\n    const user_id = jwt.verify(req.body.token, SECRET).user;\n\n    User.findByIdAndUpdate({\n        _id: user_id,\n    })\n        .then(user => {\n            if (\n                bcrypt.compareSync(req.body.oldPassword, user.password) &&\n                req.body.password === req.body.passwordConfirm\n            ) {\n                user.password = bcrypt.hashSync(req.body.password, 10);\n                user.save();\n                res.status(200).json({success: \"Mot de passe modifiÃ©!\"});\n            } else {\n                res.status(400).json({\n                    errors: [\"Une erreur est survenue\"],\n                });\n            }\n        })\n        .catch(err => {\n            res.status(500).send({errors: [err.message]});\n        });\n});\n\nrouter.get(\"/reviews\", [isLogged], (req, res) => {\n    const user_id = jwt.verify(req.body.token, SECRET).user;\n\n    User.findOne({_id: user_id})\n        .then(user => {\n            Review.find({_id: {$in: user.reviews}})\n                .then(reviews => {\n                    res.status(200).json({user: user, reviews: reviews});\n                })\n                .catch(err => {\n                    console.log(err.message);\n                    res.status(400).json({errors: [err.message]});\n                });\n        })\n        .catch(err => {\n            res.status(404).send({errors: [err.message]});\n        });\n});\n\nrouter.get(\"/reviews/:id\", [isLogged], (req, res) => {\n    User.findOne({_id: req.params.id})\n        .then(user => {\n            Review.find({_id: {$in: user.reviews}})\n                .then(reviews => {\n                    user.reviews = reviews;\n                    res.status(200).json({user: user, reviews: reviews});\n                })\n                .catch(err => {\n                    res.status(400).json({errors: [err.message]});\n                });\n        })\n        .catch(err => {\n            res.status(404).send({errors: [err.message]});\n        });\n});\n\n/* router.post(\"/bypass/everything\", (req, res) => {\n    console.log(req.body);\n    User.create({\n        name: {\n            firstName: \"admin\",\n            lastName: \"Val\",\n        },\n        email: \"admin@admin.com\",\n        password: bcrypt.hashSync(\"admin\", 10),\n        coach: true,\n    })\n        .then(user => {\n            res.status(200).send(user);\n        })\n        .catch(err => {\n            res.status(400).send(err);\n        });\n});\n */\nmodule.exports = router;\n"],"file":"Users.routes.js"}