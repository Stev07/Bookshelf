{"version":3,"sources":["../../../src/server/routes/Middleware.routes.js"],"names":["jwt","require","SECRET","process","env","secret","isCoach","req","res","next","token","query","user_id","verify","user","User","findById","_id","then","result","coach","status","json","errors","catch","err","console","log","message","isLogged","decoded","module","exports"],"mappings":";;AAAA;;;;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,MAAZ,IAAsB,uBAArC;;AAEA,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAChC,QAAMC,KAAK,GAAGH,GAAG,CAACI,KAAJ,CAAUD,KAAxB;AAEA,QAAME,OAAO,GAAGZ,GAAG,CAACa,MAAJ,CAAWH,KAAX,EAAkBR,MAAlB,EAA0BY,IAA1C;;AAEAC,gBAAKC,QAAL,CAAc;AACVC,IAAAA,GAAG,EAAEL;AADK,GAAd,EAGKM,IAHL,CAGUC,MAAM,IAAI;AACZ,QAAI,CAACA,MAAM,CAACC,KAAZ,EAAmB;AACfZ,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,CACJ,qDADI;AADS,OAArB;AAKA;AACH;;AACDd,IAAAA,IAAI;AACP,GAbL,EAcKe,KAdL,CAcWC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAjB,IAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,CACJ,6EADI,EAEJE,GAAG,CAACG,OAFA;AADS,KAArB;AAMA;AACH,GAvBL;AAwBH,CA7BD;;AA+BA,MAAMC,QAAQ,GAAG,CAACtB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACjC,QAAMC,KAAK,GAAGH,GAAG,CAACI,KAAJ,CAAUD,KAAxB;AAEAV,EAAAA,GAAG,CAACa,MAAJ,CAAWH,KAAX,EAAkBR,MAAlB,EAA0B,CAACuB,GAAD,EAAMK,OAAN,KAAkB;AACxC,QAAIL,GAAG,IAAI,CAACK,OAAZ,EAAqB;AACjBtB,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,CACJ,uEADI,EAEJE,GAAG,CAACG,OAFA;AADS,OAArB;AAMH,KAPD,MAOO;AACHnB,MAAAA,IAAI;AACP;AACJ,GAXD;AAYH,CAfD;;AAiBAsB,MAAM,CAACC,OAAP,GAAiB;AAAC9B,EAAAA,MAAD;AAASI,EAAAA,OAAT;AAAkBuB,EAAAA;AAAlB,CAAjB","sourcesContent":["import User from \"../models/User\";\nconst jwt = require(\"jsonwebtoken\");\n\nconst SECRET = process.env.secret || \"ChangeThisSecretToken\";\n\nconst isCoach = (req, res, next) => {\n    const token = req.query.token;\n\n    const user_id = jwt.verify(token, SECRET).user;\n\n    User.findById({\n        _id: user_id,\n    })\n        .then(result => {\n            if (!result.coach) {\n                res.status(404).json({\n                    errors: [\n                        \"Vous ne pouvez pas faire ça, vous n'êtes pas coach.\",\n                    ],\n                });\n                return;\n            }\n            next();\n        })\n        .catch(err => {\n            console.log(err);\n            res.status(500).json({\n                errors: [\n                    \"Une erreur de base de données à été trouvée. Conctacté votre administrateur\",\n                    err.message,\n                ],\n            });\n            return;\n        });\n};\n\nconst isLogged = (req, res, next) => {\n    const token = req.query.token;\n\n    jwt.verify(token, SECRET, (err, decoded) => {\n        if (err || !decoded) {\n            res.status(403).json({\n                errors: [\n                    \"Vous ne pouvez pas exécuter cette action si vous n'êtes pas connecté.\",\n                    err.message,\n                ],\n            });\n        } else {\n            next();\n        }\n    });\n};\n\nmodule.exports = {SECRET, isCoach, isLogged};\n"],"file":"Middleware.routes.js"}