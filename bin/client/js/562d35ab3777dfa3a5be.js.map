{"version":3,"sources":["webpack:////home/vlntngrgr/Bookshelf/node_modules/dom-align/es/align/alignElement.js","webpack:////home/vlntngrgr/Bookshelf/node_modules/dom-align/es/align/alignPoint.js","webpack:////home/vlntngrgr/Bookshelf/node_modules/dom-align/es/getVisibleRectForElement.js","webpack:////home/vlntngrgr/Bookshelf/node_modules/dom-align/es/getOffsetParent.js","webpack:////home/vlntngrgr/Bookshelf/node_modules/dom-align/es/getRegion.js","webpack:////home/vlntngrgr/Bookshelf/node_modules/dom-align/es/adjustForViewport.js","webpack:////home/vlntngrgr/Bookshelf/node_modules/dom-align/es/getAlignOffset.js","webpack:////home/vlntngrgr/Bookshelf/node_modules/dom-align/es/getElFuturePos.js","webpack:////home/vlntngrgr/Bookshelf/node_modules/dom-align/es/align/align.js"],"names":["_align__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_getOffsetParent__WEBPACK_IMPORTED_MODULE_1__","_getVisibleRectForElement__WEBPACK_IMPORTED_MODULE_2__","_getRegion__WEBPACK_IMPORTED_MODULE_3__","alignElement","el","refNode","align","target","refNodeRegion","Object","isTargetNotOutOfVisible","visibleRect","targetRegion","left","width","top","height","right","bottom","isOutOfVisibleRect","__getOffsetParent","__getVisibleRectForElement","__webpack_exports__","_utils__WEBPACK_IMPORTED_MODULE_0__","_align__WEBPACK_IMPORTED_MODULE_1__","_extends","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","tgtPoint","pageX","pageY","doc","getDocument","win","defaultView","parentWindow","scrollX","getWindowScrollLeft","scrollY","getWindowScrollTop","viewportWidth","viewportHeight","tgtRegion","clientX","clientY","pointInView","points","_isAncestorFixed__WEBPACK_IMPORTED_MODULE_2__","element","Infinity","body","documentElement","navigator","userAgent","indexOf","clientWidth","css","pos","offset","clientLeft","clientTop","Math","max","min","clientHeight","originalPosition","isWindow","nodeType","style","position","documentWidth","scrollWidth","documentHeight","scrollHeight","maxVisibleWidth","maxVisibleHeight","parent","positionStyle","nodeName","toLowerCase","parentNode","node","w","h","getWindow","outerWidth","outerHeight","es_adjustForViewport","elFuturePos","elRegion","overflow","utils","clone","size","adjustX","resizeWidth","adjustY","resizeHeight","mix","es_getAlignOffset","region","V","charAt","H","x","y","es_getElFuturePos","targetOffset","p1","p2","diff","isFailX","isFailY","flip","reg","map","ret","each","p","push","replace","m","flipOffset","index","convertOffset","str","offsetLen","test","parseInt","substring","normalizeOffset","isTgtRegionVisible","concat","newOverflowCfg","fail","getVisibleRectForElement","getRegion","newElRegion","merge","newPoints","l","r","newOffset","newTargetOffset","isCompleteFailX","_newPoints","t","b","_newOffset","_newTargetOffset","isCompleteFailY","isStillFailX","isStillFailY","useCssRight","useCssBottom","useCssTransform","ignoreShake"],"mappings":"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","file":"js/562d35ab3777dfa3a5be.js","sourcesContent":["import doAlign from './align';\nimport getOffsetParent from '../getOffsetParent';\nimport getVisibleRectForElement from '../getVisibleRectForElement';\nimport getRegion from '../getRegion';\n\nfunction isOutOfVisibleRect(target) {\n  var visibleRect = getVisibleRectForElement(target);\n  var targetRegion = getRegion(target);\n\n  return !visibleRect || targetRegion.left + targetRegion.width <= visibleRect.left || targetRegion.top + targetRegion.height <= visibleRect.top || targetRegion.left >= visibleRect.right || targetRegion.top >= visibleRect.bottom;\n}\n\nfunction alignElement(el, refNode, align) {\n  var target = align.target || refNode;\n  var refNodeRegion = getRegion(target);\n\n  var isTargetNotOutOfVisible = !isOutOfVisibleRect(target);\n\n  return doAlign(el, refNodeRegion, align, isTargetNotOutOfVisible);\n}\n\nalignElement.__getOffsetParent = getOffsetParent;\n\nalignElement.__getVisibleRectForElement = getVisibleRectForElement;\n\nexport default alignElement;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport utils from '../utils';\nimport doAlign from './align';\n\n/**\n * `tgtPoint`: { pageX, pageY } or { clientX, clientY }.\n * If client position provided, will internal convert to page position.\n */\n\nfunction alignPoint(el, tgtPoint, align) {\n  var pageX = void 0;\n  var pageY = void 0;\n\n  var doc = utils.getDocument(el);\n  var win = doc.defaultView || doc.parentWindow;\n\n  var scrollX = utils.getWindowScrollLeft(win);\n  var scrollY = utils.getWindowScrollTop(win);\n  var viewportWidth = utils.viewportWidth(win);\n  var viewportHeight = utils.viewportHeight(win);\n\n  if ('pageX' in tgtPoint) {\n    pageX = tgtPoint.pageX;\n  } else {\n    pageX = scrollX + tgtPoint.clientX;\n  }\n\n  if ('pageY' in tgtPoint) {\n    pageY = tgtPoint.pageY;\n  } else {\n    pageY = scrollY + tgtPoint.clientY;\n  }\n\n  var tgtRegion = {\n    left: pageX,\n    top: pageY,\n    width: 0,\n    height: 0\n  };\n\n  var pointInView = pageX >= 0 && pageX <= scrollX + viewportWidth && pageY >= 0 && pageY <= scrollY + viewportHeight;\n\n  // Provide default target point\n  var points = [align.points[0], 'cc'];\n\n  return doAlign(el, tgtRegion, _extends({}, align, { points: points }), pointInView);\n}\n\nexport default alignPoint;","import utils from './utils';\nimport getOffsetParent from './getOffsetParent';\nimport isAncestorFixed from './isAncestorFixed';\n\n/**\n * 获得元素的显示部分的区域\n */\nfunction getVisibleRectForElement(element) {\n  var visibleRect = {\n    left: 0,\n    right: Infinity,\n    top: 0,\n    bottom: Infinity\n  };\n  var el = getOffsetParent(element);\n  var doc = utils.getDocument(element);\n  var win = doc.defaultView || doc.parentWindow;\n  var body = doc.body;\n  var documentElement = doc.documentElement;\n\n  // Determine the size of the visible rect by climbing the dom accounting for\n  // all scrollable containers.\n  while (el) {\n    // clientWidth is zero for inline block elements in ie.\n    if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) &&\n    // body may have overflow set on it, yet we still get the entire\n    // viewport. In some browsers, el.offsetParent may be\n    // document.documentElement, so check for that too.\n    el !== body && el !== documentElement && utils.css(el, 'overflow') !== 'visible') {\n      var pos = utils.offset(el);\n      // add border\n      pos.left += el.clientLeft;\n      pos.top += el.clientTop;\n      visibleRect.top = Math.max(visibleRect.top, pos.top);\n      visibleRect.right = Math.min(visibleRect.right,\n      // consider area without scrollBar\n      pos.left + el.clientWidth);\n      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);\n      visibleRect.left = Math.max(visibleRect.left, pos.left);\n    } else if (el === body || el === documentElement) {\n      break;\n    }\n    el = getOffsetParent(el);\n  }\n\n  // Set element position to fixed\n  // make sure absolute element itself don't affect it's visible area\n  // https://github.com/ant-design/ant-design/issues/7601\n  var originalPosition = null;\n  if (!utils.isWindow(element) && element.nodeType !== 9) {\n    originalPosition = element.style.position;\n    var position = utils.css(element, 'position');\n    if (position === 'absolute') {\n      element.style.position = 'fixed';\n    }\n  }\n\n  var scrollX = utils.getWindowScrollLeft(win);\n  var scrollY = utils.getWindowScrollTop(win);\n  var viewportWidth = utils.viewportWidth(win);\n  var viewportHeight = utils.viewportHeight(win);\n  var documentWidth = documentElement.scrollWidth;\n  var documentHeight = documentElement.scrollHeight;\n\n  // Reset element position after calculate the visible area\n  if (element.style) {\n    element.style.position = originalPosition;\n  }\n\n  if (isAncestorFixed(element)) {\n    // Clip by viewport's size.\n    visibleRect.left = Math.max(visibleRect.left, scrollX);\n    visibleRect.top = Math.max(visibleRect.top, scrollY);\n    visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth);\n    visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + viewportHeight);\n  } else {\n    // Clip by document's size.\n    var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth);\n    visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth);\n\n    var maxVisibleHeight = Math.max(documentHeight, scrollY + viewportHeight);\n    visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight);\n  }\n\n  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;\n}\n\nexport default getVisibleRectForElement;","import utils from './utils';\n\n/**\n * 得到会导致元素显示不全的祖先元素\n */\n\nfunction getOffsetParent(element) {\n  if (utils.isWindow(element) || element.nodeType === 9) {\n    return null;\n  }\n  // ie 这个也不是完全可行\n  /*\n   <div style=\"width: 50px;height: 100px;overflow: hidden\">\n   <div style=\"width: 50px;height: 100px;position: relative;\" id=\"d6\">\n   元素 6 高 100px 宽 50px<br/>\n   </div>\n   </div>\n   */\n  // element.offsetParent does the right thing in ie7 and below. Return parent with layout!\n  //  In other browsers it only includes elements with position absolute, relative or\n  // fixed, not elements with overflow set to auto or scroll.\n  //        if (UA.ie && ieMode < 8) {\n  //            return element.offsetParent;\n  //        }\n  // 统一的 offsetParent 方法\n  var doc = utils.getDocument(element);\n  var body = doc.body;\n  var parent = void 0;\n  var positionStyle = utils.css(element, 'position');\n  var skipStatic = positionStyle === 'fixed' || positionStyle === 'absolute';\n\n  if (!skipStatic) {\n    return element.nodeName.toLowerCase() === 'html' ? null : element.parentNode;\n  }\n\n  for (parent = element.parentNode; parent && parent !== body; parent = parent.parentNode) {\n    positionStyle = utils.css(parent, 'position');\n    if (positionStyle !== 'static') {\n      return parent;\n    }\n  }\n  return null;\n}\n\nexport default getOffsetParent;","import utils from './utils';\n\nfunction getRegion(node) {\n  var offset = void 0;\n  var w = void 0;\n  var h = void 0;\n  if (!utils.isWindow(node) && node.nodeType !== 9) {\n    offset = utils.offset(node);\n    w = utils.outerWidth(node);\n    h = utils.outerHeight(node);\n  } else {\n    var win = utils.getWindow(node);\n    offset = {\n      left: utils.getWindowScrollLeft(win),\n      top: utils.getWindowScrollTop(win)\n    };\n    w = utils.viewportWidth(win);\n    h = utils.viewportHeight(win);\n  }\n  offset.width = w;\n  offset.height = h;\n  return offset;\n}\n\nexport default getRegion;","import utils from './utils';\n\nfunction adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {\n  var pos = utils.clone(elFuturePos);\n  var size = {\n    width: elRegion.width,\n    height: elRegion.height\n  };\n\n  if (overflow.adjustX && pos.left < visibleRect.left) {\n    pos.left = visibleRect.left;\n  }\n\n  // Left edge inside and right edge outside viewport, try to resize it.\n  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {\n    size.width -= pos.left + size.width - visibleRect.right;\n  }\n\n  // Right edge outside viewport, try to move it.\n  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {\n    // 保证左边界和可视区域左边界对齐\n    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);\n  }\n\n  // Top edge outside viewport, try to move it.\n  if (overflow.adjustY && pos.top < visibleRect.top) {\n    pos.top = visibleRect.top;\n  }\n\n  // Top edge inside and bottom edge outside viewport, try to resize it.\n  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {\n    size.height -= pos.top + size.height - visibleRect.bottom;\n  }\n\n  // Bottom edge outside viewport, try to move it.\n  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {\n    // 保证上边界和可视区域上边界对齐\n    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);\n  }\n\n  return utils.mix(pos, size);\n}\n\nexport default adjustForViewport;","/**\n * 获取 node 上的 align 对齐点 相对于页面的坐标\n */\n\nfunction getAlignOffset(region, align) {\n  var V = align.charAt(0);\n  var H = align.charAt(1);\n  var w = region.width;\n  var h = region.height;\n\n  var x = region.left;\n  var y = region.top;\n\n  if (V === 'c') {\n    y += h / 2;\n  } else if (V === 'b') {\n    y += h;\n  }\n\n  if (H === 'c') {\n    x += w / 2;\n  } else if (H === 'r') {\n    x += w;\n  }\n\n  return {\n    left: x,\n    top: y\n  };\n}\n\nexport default getAlignOffset;","import getAlignOffset from './getAlignOffset';\n\nfunction getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {\n  var p1 = getAlignOffset(refNodeRegion, points[1]);\n  var p2 = getAlignOffset(elRegion, points[0]);\n  var diff = [p2.left - p1.left, p2.top - p1.top];\n\n  return {\n    left: elRegion.left - diff[0] + offset[0] - targetOffset[0],\n    top: elRegion.top - diff[1] + offset[1] - targetOffset[1]\n  };\n}\n\nexport default getElFuturePos;","/**\n * align dom node flexibly\n * @author yiminghe@gmail.com\n */\n\nimport utils from '../utils';\nimport getVisibleRectForElement from '../getVisibleRectForElement';\nimport adjustForViewport from '../adjustForViewport';\nimport getRegion from '../getRegion';\nimport getElFuturePos from '../getElFuturePos';\n\n// http://yiminghe.iteye.com/blog/1124720\n\nfunction isFailX(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;\n}\n\nfunction isFailY(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;\n}\n\nfunction isCompleteFailX(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;\n}\n\nfunction isCompleteFailY(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;\n}\n\nfunction flip(points, reg, map) {\n  var ret = [];\n  utils.each(points, function (p) {\n    ret.push(p.replace(reg, function (m) {\n      return map[m];\n    }));\n  });\n  return ret;\n}\n\nfunction flipOffset(offset, index) {\n  offset[index] = -offset[index];\n  return offset;\n}\n\nfunction convertOffset(str, offsetLen) {\n  var n = void 0;\n  if (/%$/.test(str)) {\n    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;\n  } else {\n    n = parseInt(str, 10);\n  }\n  return n || 0;\n}\n\nfunction normalizeOffset(offset, el) {\n  offset[0] = convertOffset(offset[0], el.width);\n  offset[1] = convertOffset(offset[1], el.height);\n}\n\n/**\n * @param el\n * @param tgtRegion 参照节点所占的区域: { left, top, width, height }\n * @param align\n */\nfunction doAlign(el, tgtRegion, align, isTgtRegionVisible) {\n  var points = align.points;\n  var offset = align.offset || [0, 0];\n  var targetOffset = align.targetOffset || [0, 0];\n  var overflow = align.overflow;\n  var source = align.source || el;\n  offset = [].concat(offset);\n  targetOffset = [].concat(targetOffset);\n  overflow = overflow || {};\n  var newOverflowCfg = {};\n  var fail = 0;\n  // 当前节点可以被放置的显示区域\n  var visibleRect = getVisibleRectForElement(source);\n  // 当前节点所占的区域, left/top/width/height\n  var elRegion = getRegion(source);\n  // 将 offset 转换成数值，支持百分比\n  normalizeOffset(offset, elRegion);\n  normalizeOffset(targetOffset, tgtRegion);\n  // 当前节点将要被放置的位置\n  var elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);\n  // 当前节点将要所处的区域\n  var newElRegion = utils.merge(elRegion, elFuturePos);\n\n  // 如果可视区域不能完全放置当前节点时允许调整\n  if (visibleRect && (overflow.adjustX || overflow.adjustY) && isTgtRegionVisible) {\n    if (overflow.adjustX) {\n      // 如果横向不能放下\n      if (isFailX(elFuturePos, elRegion, visibleRect)) {\n        // 对齐位置反下\n        var newPoints = flip(points, /[lr]/ig, {\n          l: 'r',\n          r: 'l'\n        });\n        // 偏移量也反下\n        var newOffset = flipOffset(offset, 0);\n        var newTargetOffset = flipOffset(targetOffset, 0);\n        var newElFuturePos = getElFuturePos(elRegion, tgtRegion, newPoints, newOffset, newTargetOffset);\n\n        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = newPoints;\n          offset = newOffset;\n          targetOffset = newTargetOffset;\n        }\n      }\n    }\n\n    if (overflow.adjustY) {\n      // 如果纵向不能放下\n      if (isFailY(elFuturePos, elRegion, visibleRect)) {\n        // 对齐位置反下\n        var _newPoints = flip(points, /[tb]/ig, {\n          t: 'b',\n          b: 't'\n        });\n        // 偏移量也反下\n        var _newOffset = flipOffset(offset, 1);\n        var _newTargetOffset = flipOffset(targetOffset, 1);\n        var _newElFuturePos = getElFuturePos(elRegion, tgtRegion, _newPoints, _newOffset, _newTargetOffset);\n\n        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = _newPoints;\n          offset = _newOffset;\n          targetOffset = _newTargetOffset;\n        }\n      }\n    }\n\n    // 如果失败，重新计算当前节点将要被放置的位置\n    if (fail) {\n      elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);\n      utils.mix(newElRegion, elFuturePos);\n    }\n    var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect);\n    var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect);\n    // 检查反下后的位置是否可以放下了，如果仍然放不下：\n    // 1. 复原修改过的定位参数\n    if (isStillFailX || isStillFailY) {\n      points = align.points;\n      offset = align.offset || [0, 0];\n      targetOffset = align.targetOffset || [0, 0];\n    }\n    // 2. 只有指定了可以调整当前方向才调整\n    newOverflowCfg.adjustX = overflow.adjustX && isStillFailX;\n    newOverflowCfg.adjustY = overflow.adjustY && isStillFailY;\n\n    // 确实要调整，甚至可能会调整高度宽度\n    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {\n      newElRegion = adjustForViewport(elFuturePos, elRegion, visibleRect, newOverflowCfg);\n    }\n  }\n\n  // need judge to in case set fixed with in css on height auto element\n  if (newElRegion.width !== elRegion.width) {\n    utils.css(source, 'width', utils.width(source) + newElRegion.width - elRegion.width);\n  }\n\n  if (newElRegion.height !== elRegion.height) {\n    utils.css(source, 'height', utils.height(source) + newElRegion.height - elRegion.height);\n  }\n\n  // https://github.com/kissyteam/kissy/issues/190\n  // 相对于屏幕位置没变，而 left/top 变了\n  // 例如 <div 'relative'><el absolute></div>\n  utils.offset(source, {\n    left: newElRegion.left,\n    top: newElRegion.top\n  }, {\n    useCssRight: align.useCssRight,\n    useCssBottom: align.useCssBottom,\n    useCssTransform: align.useCssTransform,\n    ignoreShake: align.ignoreShake\n  });\n\n  return {\n    points: points,\n    offset: offset,\n    targetOffset: targetOffset,\n    overflow: newOverflowCfg\n  };\n}\n\nexport default doAlign;\n/**\n *  2012-04-26 yiminghe@gmail.com\n *   - 优化智能对齐算法\n *   - 慎用 resizeXX\n *\n *  2011-07-13 yiminghe@gmail.com note:\n *   - 增加智能对齐，以及大小调整选项\n **/"],"sourceRoot":""}