{"version":3,"sources":["webpack:///./components/NavBar.js"],"names":["NavBar","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","handleScroll","setState","scroll","window","scrollY","fct","el","document","querySelector","top","offsetTop","height","offsetHeight","addEventListener","state","React","body","style","paddingTop","concat","react__WEBPACK_IMPORTED_MODULE_0__","className","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","to"],"mappings":"87BAKqBA,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACfE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KAIVO,aAAe,WACXN,EAAKO,SAAS,CAACC,OAAQC,OAAOC,WANfV,EAanBW,IAAM,WACF,IAAMC,EAAKC,SAASC,cAAc,OAElCd,EAAKO,SAAS,CAACQ,IAAKH,EAAGI,UAAWC,OAAQL,EAAGM,eAC7CT,OAAOU,iBAAiB,SAAUnB,EAAKM,eAfvCN,EAAKoB,MAAQ,CAACL,IAAK,GAAIE,OAAQ,IAFhBjB,wPADaqB,kEAW5BnB,KAAKS,mDAWLT,KAAKkB,MAAMZ,OAASN,KAAKkB,MAAML,IACxBF,SAASS,KAAKC,MAAMC,WAApB,GAAAC,OAAoCvB,KAAKkB,MAAMH,OAA/C,MACAJ,SAASS,KAAKC,MAAMC,WAAa,mCAIxC,OACIE,EAAA,qBACIC,UACIzB,KAAKkB,MAAMZ,OAASN,KAAKkB,MAAML,IAAM,YAAc,IAEvDW,EAAA,qBAAKC,UAAU,YACXD,EAAA,oBAAIC,UAAU,WACVD,EAAA,cAACE,EAAA,EAAD,CAAMC,GAAG,SAAT,IAAmB,OAAnB,MAEJH,EAAA,qBAAKC,UAAU,YAAY,KAC3BD,EAAA,oBAAIC,UAAU,WACVD,EAAA,cAACE,EAAA,EAAD,CAAMC,GAAG,UAAT,IAAoB,QAApB,MAEJH,EAAA,qBAAKC,UAAU,YAAY,KAC3BD,EAAA,oBAAIC,UAAU,WACVD,EAAA,cAACE,EAAA,EAAD,CAAMC,GAAG,WAAT,IAAqB,SAArB","file":"js/013389f13a99558832b9.js","sourcesContent":["import * as React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./scss/navbar.scss\";\n\n\nexport default class NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {top: \"\", height: \"\"};\n    }\n\n    handleScroll = () => {\n        this.setState({scroll: window.scrollY});\n    };\n\n    componentDidMount() {\n        this.fct();\n    }\n\n    fct = () => {\n        const el = document.querySelector(\"nav\");\n\n        this.setState({top: el.offsetTop, height: el.offsetHeight});\n        window.addEventListener(\"scroll\", this.handleScroll);\n    };\n\n    componentDidUpdate() {\n        this.state.scroll > this.state.top\n            ? (document.body.style.paddingTop = `${this.state.height}px`)\n            : (document.body.style.paddingTop = 0);\n    }\n\n    render() {\n        return (\n            <nav\n                className={\n                    this.state.scroll > this.state.top ? \"fixed-nav\" : \"\"\n                }>\n                <div className=\"navLinks\">\n                    <li className=\"navItem\">\n                        <Link to=\"/home\"> {\"Home\"} </Link>\n                    </li>\n                    <div className=\"separate\">{\"|\"}</div>\n                    <li className=\"navItem\">\n                        <Link to=\"/books\"> {\"Books\"} </Link>\n                    </li>\n                    <div className=\"separate\">{\"|\"}</div>\n                    <li className=\"navItem\">\n                        <Link to=\"/author\"> {\"Author\"} </Link>\n                    </li>\n                </div>\n            </nav>\n        );\n    }\n}\n"],"sourceRoot":""}